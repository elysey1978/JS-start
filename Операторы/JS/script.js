"use strict";

console.log('arr' + ' - object'); //конкатенация
console.log(4 + +'5');
/*Плюс вначале строки переводит её в числовой тип данных, он называется унарным оператором.
Кавычки переводят числа в строковый тип данных */

let incr = 10,
	decr = 10;

//incr++; //постфиксная форма записи оператора инкремента
//decr--; //постфиксная форма записи оператора декремента

//++incr; //префиксная форма записи оператора инкремента
//--decr; //префиксная форма записи оператора декремента

//console.log(incr++); //В данном случае постфиксная форма записи операторов сначала возвращает нам начальное значание переменной
//console.log(decr--); //По этому программа выведет нам в консоль именно число 10!!!

console.log(++incr); //Соответсвенно в таких случаях правильно использовать префиксную форму записи!!!
console.log(--decr);

console.log(5 % 2);

console.log(2 * 4 == 8); //получаем значение true
console.log(2 * 4 == '8'); //так же получаем значение true
console.log(2 * 4 === '8'); // в данном случае значение false т.к. был применен оператор строгого сравнения, который выявил, что '8' является строковым типом данных


// оператор "И" - &&

const isChecked = true,
	isClose = false;

console.log(isChecked && isClose); // оператор && возвращает true тлько в том случае, если оба события правдивы!!!

// оператор "ИЛИ" - ||

const isDog = true,
	isWolf = false;

console.log(isDog || isWolf); // оператор || возвращает true, если хотя бы одно из событий является правдой!!!

// оператр отрицания - "!"

const isRain = true,
	isSnow = false;

console.log(!isRain || isSnow); // в данном примере с помощью "!" мы изменили true на false и получили false.

// Порядок выполнения операторов

console.log(2 + 2 * 2 === 8); // получаем false т.к. в первую очередь выполняется оператор умножения, в результате чего получаем число 6!

console.log(2 + 2 * 2 !== 8); //получаем true т.к. в данном примере перед оператором сравнения стоит оператор отрицания.